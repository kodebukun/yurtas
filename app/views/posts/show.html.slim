.my-4
  / Post user
  .d-flex.flex-row
    h4.mt-4= link_to @post.user.name, @post.user
  h4= @post.title
  hr
  / Post content simple_formatで改行 rinkuでurlオートリンク
  h5= simple_format(Rinku.auto_link(@post.content, :all, 'target="_blank"').html_safe)

  / post bottom section
  .d-flex.justify-content-between.mx-2
    / edit and destroy
    - if @post.user_id == @current_user.id
      - if @post.department
        = render partial: "btn_edit_destroy", locals: {edit_path: edit_department_post_path, destroy_path: department_post_path}
      - elsif @post.work
        = render partial: "btn_edit_destroy", locals: {edit_path: edit_work_post_path, destroy_path: work_post_path}
      - else
        = render partial: "btn_edit_destroy", locals: {edit_path: edit_post_path, destroy_path: post_path}
    - else
      div
    / likes of post
    div
      - if Like.find_by(user_id: @current_user.id, post_id: @post.id)
        = link_to like_path(post_id: @post.id), method: :delete, class: "table-link mr-1", style: "text-decoration: none;" do
          i.fas.fa-heart.text-danger
      - else
        = link_to likes_path(post_id: @post.id), method: :post, class: "table-link mr-1", style: "text-decoration: none;" do
          i.fas.fa-heart.text-secondary
      = @post.likes.count
  hr.mb-1
  = @post.created_at.strftime("%Y-%m-%d %H:%M")
  .d-flex.flex-row-reverse.mt-4
    = link_to "コメントする", new_comment_path(post_id: @post.id), class: "btn btn-primary mr-3"
  / Comment
  - @comments.each do |comment|
    .d-flex.flex-row
      h5.mt-0= link_to comment.user.name, user_path(comment.user)
    = simple_format(comment.content)

    .d-flex.justify-content-end.mx-2
      div
        /edit and destroy
        - if comment.user_id == @current_user.id
          div
          = link_to edit_comment_path(comment), class: "btn px-0 bg-white" do
            span.fa-stack
              i.fas.fa-square.fa-stack-2x.text-primary
              i.fas.fa-pen.fa-stack-1x.fa-inverse
          = link_to comment, method: :delete, data: {confirm: "コメントを削除します。よろしいですか？"}, class: "btn px-0 bg-white" do
            span.fa-stack
              i.fas.fa-square.fa-stack-2x.text-danger
              i.far.fa-trash-alt.fa-stack-1x.fa-inverse
      /likes of comment
      div
        - if Like.find_by(user_id: @current_user.id, comment_id: comment.id)
          = link_to like_path(comment_id: comment.id), method: :delete, class: "table-link mr-1", style: "text-decoration: none;" do
            i.fas.fa-heart.text-danger
        - else
          = link_to likes_path(comment_id: comment.id), method: :post, class: "table-link mr-1", style: "text-decoration: none;" do
            i.fas.fa-heart.text-secondary
        = comment.likes.count
    hr
  /一覧へのリンク
  .nav.justify-content-end.mt-3
    - if @post.department
      = link_to "#{@post.department.name}の掲示板へ", department_posts_path(department_id: @post.department.id), class:"nav-link"
    -elsif @post.work
      = link_to "#{@post.work.name}の掲示板へ", work_posts_path(work_id: @post.work.id), class:"nav-link"
    -else
      = link_to "掲示板へ", posts_path, class:"nav-link"
